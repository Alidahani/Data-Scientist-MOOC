library(Hmisc)
capitalize(x)
events <- data_$EVTYPE
fatalities <- data_$FATALITIES
injuries <- data_$INJURIES
# convert date into years
years <- as.Date(data_$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
years <- as.numeric(format(years, "%Y"))
# plot a histogram of the years
hist(years)
# standardize the event types and group similar ones together (985 - 252 factors)
events <- sapply(events, FUN = function(x){
x <- tolower(x)
if (grepl("flood", x)){
return("Flood")
}
if (grepl("tornado", x)){
return("Tornado")
}
if (grepl("snow|ice|wintry|freez|blizzard|cold|winter", x)){
return("Wintry")
}
if (grepl("rain|shower", x)){
return("Rain")
}
if (grepl("thunder|lightning", x)){
return("Lightning")
}
if (grepl("wind", x)){
return("Wind")
}
if (grepl("hurricane|tropical|typhoon", x)){
return("Hurricane")
}
if (grepl("dry|drought", x)){
return("Dry weather")
}
if (grepl("heat|warm", x)){
return("Heat")
}
if (grepl("hail", x)){
return("Hail")
}
if (grepl("fire", x)){
return("Fire")
}
else{
return(caplitalize(x))
}
})
# standardize the event types and group similar ones together (985 - 252 factors)
events <- sapply(events, FUN = function(x){
x <- tolower(x)
if (grepl("flood", x)){
return("Flood")
}
if (grepl("tornado", x)){
return("Tornado")
}
if (grepl("snow|ice|wintry|freez|blizzard|cold|winter", x)){
return("Wintry")
}
if (grepl("rain|shower", x)){
return("Rain")
}
if (grepl("thunder|lightning", x)){
return("Lightning")
}
if (grepl("wind", x)){
return("Wind")
}
if (grepl("hurricane|tropical|typhoon", x)){
return("Hurricane")
}
if (grepl("dry|drought", x)){
return("Dry weather")
}
if (grepl("heat|warm", x)){
return("Heat")
}
if (grepl("hail", x)){
return("Hail")
}
if (grepl("fire", x)){
return("Fire")
}
else{
return(caplitalize(x))
}
})
# factor variable to distinguish events
events_factors <- factor(events)
# sum up the fatalities and injuries for each event
fatalities_sum <- aggregate(fatalities, list(events_factors), sum)
injuries_sum <- aggregate(injuries, list(events_factors), sum)
names(fatalities_sum) <- c("Event", "Count"); names(injuries_sum) <- c("Event", "Count")
# create a DF of Event, Injuries, Fatalities a
health <- data.frame(fatalities_sum$Event, injuries_sum$Count, fatalities_sum$Count)
names(health) <- c("Event", "Injuries", "Fatalities")
# reorder by injuries and fatalities, then take the top 10 rows
health <- health[with(health, order(-Injuries, -Fatalities)), ][1:10,]
# reshape to long format (for stacked histogram)
health <- melt(health); names(health) <- c("Event", "variable", "value")
p1 <- ggplot(data = health, aes(x = Event, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
head(events)
# standardize the event types and group similar ones together (985 - 252 factors)
events <- sapply(events, FUN = function(x){
x <- tolower(x)
if (grepl("flood", x)){
return("Flood")
}
if (grepl("tornado", x)){
return("Tornado")
}
if (grepl("snow|ice|wintry|freez|blizzard|cold|winter", x)){
return("Wintry")
}
if (grepl("rain|shower", x)){
return("Rain")
}
if (grepl("thunder|lightning", x)){
return("Lightning")
}
if (grepl("wind", x)){
return("Wind")
}
if (grepl("hurricane|tropical|typhoon", x)){
return("Hurricane")
}
if (grepl("dry|drought", x)){
return("Dry weather")
}
if (grepl("heat|warm", x)){
return("Heat")
}
if (grepl("hail", x)){
return("Hail")
}
if (grepl("fire", x)){
return("Fire")
}
else{
return(caplitalize(x))
}
})
events <- sapply(events, FUN = function(x){
x <- tolower(x)
if (grepl("flood", x)){
return("Flood")
}
if (grepl("tornado", x)){
return("Tornado")
}
if (grepl("snow|ice|wintry|freez|blizzard|cold|winter", x)){
return("Wintry")
}
if (grepl("rain|shower", x)){
return("Rain")
}
if (grepl("thunder|lightning", x)){
return("Lightning")
}
if (grepl("wind", x)){
return("Wind")
}
if (grepl("hurricane|tropical|typhoon", x)){
return("Hurricane")
}
if (grepl("dry|drought", x)){
return("Dry weather")
}
if (grepl("heat|warm", x)){
return("Heat")
}
if (grepl("hail", x)){
return("Hail")
}
if (grepl("fire", x)){
return("Fire")
}
else{
return(capitalize(x))
}
})
head(events)
# factor variable to distinguish events
events_factors <- factor(events)
# sum up the fatalities and injuries for each event
fatalities_sum <- aggregate(fatalities, list(events_factors), sum)
injuries_sum <- aggregate(injuries, list(events_factors), sum)
names(fatalities_sum) <- c("Event", "Count"); names(injuries_sum) <- c("Event", "Count")
# create a DF of Event, Injuries, Fatalities a
health <- data.frame(fatalities_sum$Event, injuries_sum$Count, fatalities_sum$Count)
names(health) <- c("Event", "Injuries", "Fatalities")
# reorder by injuries and fatalities, then take the top 10 rows
health <- health[with(health, order(-Injuries, -Fatalities)), ][1:10,]
# reshape to long format (for stacked histogram)
health <- melt(health); names(health) <- c("Event", "variable", "value")
p1 <- ggplot(data = health, aes(x = Event, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
health$Event2 <- redorder(health$Event, health$injuries)
health$Event2 <- reorder(health$Event, health$injuries)
length(health$Event)
length(health$injuries)
head(health)
health$Event2 <- reorder(health$Event, health$values)
health$Event2 <- reorder(health$Event, health$value)
head(health)
health$Event2 <- reorder(health$Event, health$values)
p1 <- ggplot(data = health, aes(x = Event2, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
health$Event2 <- reorder(-health$Event, health$values)
p1 <- ggplot(data = health, aes(x = Event2, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
health$Event2 <- reorder(health$Event, -health$values)
p1 <- ggplot(data = health, aes(x = Event2, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
?reorder
health$Event <- reorder(health$Event, health$values)
p1 <- ggplot(data = health, aes(x = Event, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
health <- melt(health); names(health) <- c("Event", "variable", "value")
health$Event2 <- reorder(health$Event, health$values)
p1 <- ggplot(data = health, aes(x = Event2, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
health <- health[with(health, order(-Injuries, -Fatalities)), ][1:10,]
# reshape to long format (for stacked histogram)
health <- melt(health); names(health) <- c("Event", "variable", "value")
health$Event2 <- reorder(health$Event, health$values)
p1 <- ggplot(data = health, aes(x = Event2, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
health$Event2 <- reorder(health$Event, health$values)
health$Event2 <- reorder(health$Event, health$values)
# create a DF of Event, Injuries, Fatalities a
health <- data.frame(fatalities_sum$Event, injuries_sum$Count, fatalities_sum$Count)
names(health) <- c("Event", "Injuries", "Fatalities")
# reorder by injuries and fatalities, then take the top 10 rows
health <- health[with(health, order(-Injuries, -Fatalities)), ][1:10,]
# reshape to long format (for stacked histogram)
health <- melt(health); names(health) <- c("Event", "variable", "value")
health$Event2 <- reorder(health$Event, health$values)
p1 <- ggplot(data = health, aes(x = Event2, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
head(health)
health$Event2 <- reorder(health$Event, health$value)
p1 <- ggplot(data = health, aes(x = Event2, y = value, fill = variable))
p1 + geom_bar(stat ='identity') + labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011', y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
# assign variables to the relevant columns
prop_dmg <- apply(data_[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) convertUnits(y['PROPDMG'], y['PROPDMGEXP']))
crop_dmg <- apply(data_[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) convertUnits(y['CROPDMG'], y['CROPDMGEXP']))
# sum up the property and crop damage for each event
prop_sum <- aggregate(prop_dmg, list(events_factors), sum)
crop_sum <- aggregate(crop_dmg, list(events_factors), sum)
names(prop_sum) <- c("Event", "Count"); names(crop_sum) <- c("Event", "Count")
# create a DF and reshape it to long format (for stacked histogram)
economic <- data.frame(prop_sum$Event, crop_sum$Count, prop_sum$Count)
names(economic) <- c("Event", "Crop damage", "Property damage")
economic <- melt(economic); names(economic) <- c("Event", "variable", "value")
p2 <- ggplot(data = economic, aes(x = Event, y = value, fill = variable))
p2 + geom_bar(stat ='identity') +
labs(title = 'Severe Weather In The US: Top 10 Most Harmful Types of Weather\n Measured by Property and Crop Damage 1950 - 2011',
y = 'Number of People', x = 'Weather Event', fill = 'Type of damage')
# assign variables to the relevant columns
prop_dmg <- data_$PROPDMG
prop_dmg_units <- data_$PROPDMGEXP
crop_dmg <- data_$CROPDMG
crop_dmg_units <- data_$cROPDMGEXP
prop_dmg <- sapply(prop_dmg, prop_dmg_units, FUN = function(amount, units){
if (is.na(units)){
as.numeric(amount)
}
else if (toupper(units)== "K"){
as.numeric(amount)*10^3
}
else if (toupper(units) == "M"){
as.numeric(amount)*10^6
}
else if (toupper(units)== "B"){
as.numeric(amount)*10^9
}
else{
as.numeric(amount)
}
})
warnings()
head(economic)
economic <- economic[with(economic, order(-Crop damage, -Property damage)), ][1:10,]
economic <- data.frame(prop_sum$Event, crop_sum$Count, prop_sum$Count)
head(economic)
names(economic) <- c("Event", "Crop damage", "Property damage")
head(economic)
head(health)
economic <- data.frame(prop_sum$Event, crop_sum$Count, prop_sum$Count)
names(economic) <- c("Event", "Crop", "Property")
economic <- melt(economic); names(economic) <- c("Event", "variable", "value")
economic <- economic[with(health, order(-Crop, -Property)), ][1:10,]
head(economic)
names(economic) <- c("Event", "Crop", "Property")
economic <- economic[with(health, order(-Crop, -Property)), ][1:10,]
head(economic)
economic <- economic[with(economic, order(-Crop, -Property)), ][1:10,]
head(economic)
economic <- economic[with(economic, order(-Crop, -Property)), ]
head(economic)
economic <- data.frame(prop_sum$Event, crop_sum$Count, prop_sum$Count)
names(economic) <- c("Event", "Crop", "Property")
economic[1, 3]
head(conomic)
head(economic)
# assign variables to the relevant columns
prop_dmg <- apply(data_[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) convertUnits(y['PROPDMG'], y['PROPDMGEXP']))
crop_dmg <- apply(data_[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) convertUnits(y['CROPDMG'], y['CROPDMGEXP']))
# sum up the property and crop damage for each event
prop_sum <- aggregate(prop_dmg, list(events_factors), sum)
crop_sum <- aggregate(crop_dmg, list(events_factors), sum)
names(prop_sum) <- c("Event", "Count"); names(crop_sum) <- c("Event", "Count")
head(economic)
# reorder by injuries and fatalities, then take the top 10 rows
economic <- economic[with(economic, order(-Crop, -Property)), ][1:10,]
head(economic)
# add a column to sort the histogram by size
economic$Event2 <- reorder(economic$Event, economic$value)
p2 <- ggplot(data = economic, aes(x = Event2, y = value, fill = variable))
p2 + geom_bar(stat ='identity') +
labs(title = '10 Most Harmful Types of Weather\n Measured by Property and Crop Damage 1950 - 2011',
y = 'Number of People', x = 'Weather Event', fill = 'Type of damage')
economic$Event2 <- reorder(economic$Event, economic$value)
p2 <- ggplot(data = economic, aes(x = Event2, y = value, fill = variable))
p2 + geom_bar(stat ='identity') +
labs(title = '10 Most Harmful Types of Weather\n Measured by Property and Crop Damage 1950 - 2011',
y = 'Number of People', x = 'Weather Event', fill = 'Type of damage')
head(economic)
economic$Event2 <- reorder(economic$Event, economic$value)
# reshape to long format (for stacked histogram)
economic <- melt(economic); names(economic) <- c("Event", "variable", "value")
# add a column to sort the histogram by size
economic$Event2 <- reorder(economic$Event, economic$value)
p2 <- ggplot(data = economic, aes(x = Event2, y = value, fill = variable))
p2 + geom_bar(stat ='identity') +
labs(title = '10 Most Harmful Types of Weather\n Measured by Property and Crop Damage 1950 - 2011',
y = 'Number of People', x = 'Weather Event', fill = 'Type of damage')
# sum up the property and crop damage for each event
prop_sum <- aggregate(prop_dmg, list(events_factors), sum)
crop_sum <- aggregate(crop_dmg, list(events_factors), sum)
names(prop_sum) <- c("Event", "Count"); names(crop_sum) <- c("Event", "Count")
# create a DF of Event, Crop damage, Property damage
economic <- data.frame(prop_sum$Event, prop_sum$Count, crop_sum$Count)
names(economic) <- c("Event", "Property", "Crop")
# reorder by injuries and fatalities, then take the top 10 rows
economic <- economic[with(economic, order(-Property, -Crop)), ][1:10,]
# reshape to long format (for stacked histogram)
economic <- melt(economic); names(economic) <- c("Event", "variable", "value")
# add a column to sort the histogram by size
economic$Event2 <- reorder(economic$Event, economic$value)
p2 <- ggplot(data = economic, aes(x = Event2, y = value, fill = variable))
p2 + geom_bar(stat ='identity') +
labs(title = '10 Most Harmful Types of Weather\n Measured by Property and Crop Damage 1950 - 2011',
y = 'Number of People', x = 'Weather Event', fill = 'Type of damage')
head(economic)
p2 <- ggplot(data = economic, aes(x = Event2, y = value, fill = variable))
p2 + geom_bar(stat ='identity') +
labs(title = '10 Most Harmful Types of Weather\n Measured by Property and Crop Damage 1950 - 2011',
y = 'Damage ($)', x = 'Weather Event', fill = 'Type of damage')
p2 <- ggplot(data = economic, aes(x = Event2, y = value, fill = variable))
p2 + geom_bar(stat ='identity') +
labs(title = '10 Most Harmful Types of Weather\n Measured by Property and Crop Damage 1950 - 2011',
y = 'Damage ($)', x = 'Weather Event', fill = 'Type of damage') +
scale_y_continuous(labels = dollar)
p2 <- ggplot(data = economic, aes(x = Event2, y = value/10^9, fill = variable))
p2 + geom_bar(stat ='identity') +
labs(title = '10 Most Harmful Types of Weather\n Measured by Property and Crop Damage 1950 - 2011',
y = 'Damage ($)', x = 'Weather Event', fill = 'Type of damage')
data_ <- read.csv("./data/stormdata.zip")
data_ = subset(data_, select = c("BGN_DATE", "EVTYPE","FATALITIES","INJURIES","PROPDMG", "PROPDMGEXP", "CROPDMG", "cROPDMGEXP"))
# str(data_)
# assign variables to the relevant columns
events <- data_$EVTYPE
fatalities <- data_$FATALITIES
injuries <- data_$INJURIES
# convert date into years
years <- as.Date(data_$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
years <- as.numeric(format(years, "%Y"))
# plot a histogram of the years
hist(years)
# standardize the event types and group similar ones together (985 - 252 factors)
events <- sapply(events, FUN = function(x){
x <- tolower(x)
if (grepl("flood", x)){
return("Flood")
}
if (grepl("tornado", x)){
return("Tornado")
}
if (grepl("snow|ice|wintry|freez|blizzard|cold|winter", x)){
return("Wintry")
}
if (grepl("rain|shower", x)){
return("Rain")
}
if (grepl("thunder|lightning", x)){
return("Lightning")
}
if (grepl("wind", x)){
return("Wind")
}
if (grepl("hurricane|tropical|typhoon", x)){
return("Hurricane")
}
if (grepl("dry|drought", x)){
return("Dry weather")
}
if (grepl("heat|warm", x)){
return("Heat")
}
if (grepl("hail", x)){
return("Hail")
}
if (grepl("fire", x)){
return("Fire")
}
else{
return(capitalize(x))
}
})
# factor variable to distinguish events
events_factors <- factor(events)
# sum up the fatalities and injuries for each event
fatalities_sum <- aggregate(fatalities, list(events_factors), sum)
injuries_sum <- aggregate(injuries, list(events_factors), sum)
names(fatalities_sum) <- c("Event", "Count"); names(injuries_sum) <- c("Event", "Count")
# create a DF of Event, Injuries, Fatalities
health <- data.frame(fatalities_sum$Event, injuries_sum$Count, fatalities_sum$Count)
names(health) <- c("Event", "Injuries", "Fatalities")
# reorder by injuries and fatalities, then take the top 10 rows
health <- health[with(health, order(-Injuries, -Fatalities)), ][1:10,]
# reshape to long format (for stacked histogram)
health <- melt(health); names(health) <- c("Event", "variable", "value")
# add a column to sort the histogram by size
health$Event2 <- reorder(health$Event, health$value)
p1 <- ggplot(data = health, aes(x = Event2, y = value, fill = variable))
p1 + geom_bar(stat ='identity') +
labs(title = '10 Most Harmful Types of Weather\n Measured by Fatalities & Injuries 1950 - 2011',
y = 'Number of People', x = 'Weather Event', fill = 'Type of harm')
# function to combine the amount and units
convertUnits <- function(amount, units){
if (is.na(units)){
as.numeric(amount)
}
else if (toupper(units)== "K"){
as.numeric(amount)*10^3
}
else if (toupper(units) == "M"){
as.numeric(amount)*10^6
}
else if (toupper(units)== "B"){
as.numeric(amount)*10^9
}
else{
as.numeric(amount)
}
}
# assign variables to the relevant columns
prop_dmg <- apply(data_[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) convertUnits(y['PROPDMG'], y['PROPDMGEXP']))
crop_dmg <- apply(data_[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) convertUnits(y['CROPDMG'], y['CROPDMGEXP']))
# sum up the property and crop damage for each event
prop_sum <- aggregate(prop_dmg, list(events_factors), sum)
crop_sum <- aggregate(crop_dmg, list(events_factors), sum)
names(prop_sum) <- c("Event", "Count"); names(crop_sum) <- c("Event", "Count")
# create a DF of Event, Crop damage, Property damage
economic <- data.frame(prop_sum$Event, prop_sum$Count, crop_sum$Count)
names(economic) <- c("Event", "Property", "Crop")
# reorder by injuries and fatalities, then take the top 10 rows
economic <- economic[with(economic, order(-Property, -Crop)), ][1:10,]
# reshape to long format (for stacked histogram)
economic <- melt(economic); names(economic) <- c("Event", "variable", "value")
# add a column to sort the histogram by size
economic$Event2 <- reorder(economic$Event, economic$value)
p2 <- ggplot(data = economic, aes(x = Event2, y = value/10^9, fill = variable))
p2 + geom_bar(stat ='identity') +
labs(title = '10 Most Harmful Types of Weather\n Measured by Property and Crop Damage 1950 - 2011',
y = 'Damage (Billion $)', x = 'Weather Event', fill = 'Type of damage')
d <- read.csv(unz(destfile, "stormdata.csv"))
destfile <- "./data/stormdata.zip"
d <- read.csv(unz(destfile, "stormdata.csv"))
read.csv(suppressWarnings(unz(destfile, "stormdata.csv")))
getwd()
bunzip2(destfile, overwrite = TRUE, remove = FALSE)
str(data_)
summary(data_)
storm.data <- read.csv(bzfile(destfile ),
header=TRUE)
storm.data <- read.csv(bzfile(destfile ), header=TRUE)
storm.data <- read.csv(bzfile(destfile), header=TRUE)
destfile
?bzfile
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
destfile <- "./data/activity.zip"
data_ <- read.csv("destfile")
destfile
getwd()
data_ <- read.csv("./data/activity.zip")
library(knitr)
data_ <- read.csv("./data/stormdata.zip", nrows =2)
?unz
?unzip
unzip("./data/stormdata.zip")
unz("./data/stormdata.zip")
bzfile("./data/stormdata.zip")
data_ <- read.csv(bzfile("./data/stormdata.csv.bz2"), nrows = 2, header=TRUE)
data_ <- read.csv("./data/stormdata.csv.bz2", nrows = 2, header=TRUE)
getwd()
