preProc <- preProcess(training[, IL_variables], method = "pca", thresh = 0.9)
preProc
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[trainIndex,]
length(training)
length(testing)
trainign
training
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis,p=0.5)
training = adData[trainIndex,]
testing = adData[trainIndex,]
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
# obtain the predictors
IL_variables <- grep("^IL", names(training), value = TRUE)
# preprocess the predictors
preProc <- preProcess(training[, IL_variables], method = "pca", thresh = 0.8)
preProc
names(preProc)
preProc$rotation
diagnosis
length(training)
IL_str <- grep("^IL", colnames(training), value = TRUE)
## make a subset of these predictors
predictors_IL <- predictors[, IL_str]
df <- data.frame(diagnosis, predictors_IL)
inTrain = createDataPartition(df$diagnosis, p = 3/4)[[1]]
training = df[inTrain, ]
testing = df[-inTrain, ]
## train the data using the first method
modelFit <- train(diagnosis ~ ., method = "glm", data = training)
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
set.seed(3433)
## grep the predictors starting with 'IL'
IL_str <- grep("^IL", colnames(training), value = TRUE)
## make a subset of these predictors
predictors_IL <- predictors[, IL_str]
df <- data.frame(diagnosis, predictors_IL)
inTrain = createDataPartition(df$diagnosis, p = 3/4)[[1]]
training = df[inTrain, ]
testing = df[-inTrain, ]
## train the data using the first method
modelFit <- train(diagnosis ~ ., method = "glm", data = training)
IL_str <- grep("^IL", colnames(training), value = TRUE)
predictors_IL <- predictors[, IL_str]
IL_str
predictors_IL
df <- data.frame(diagnosis, predictors_IL)
df
install.packages( "e1071" )
modelFit <- train(diagnosis ~ ., method = "glm", data = training)
modelFit
predictions <- predict(modelFit, newdata = testing)
predictions
C1 <- confusionMatrix(predictions, testing$diagnosis)
print(C1)
modelFit <- train(training$diagnosis ~ ., method = "glm", preProcess = "pca",
data = training, trControl = trainControl(preProcOptions = list(thresh = 0.8)))
C2 <- confusionMatrix(testing$diagnosis, predict(modelFit, testing))
print(C2)
## do similar steps with the caret package
modelFit <- train(training$diagnosis ~ ., method = "glm", data = training,
preProcess = "pca")
C2 <- confusionMatrix(testing$diagnosis, predict(modelFit, testing))
print(C2)
print(C1)
?createDataPartition
inTrain <- createDataPartition(spam$type, p = 0.75, list = FALSE)
library(caret)
library(kernlab)
data(spam)
inTrain <- createDataPartition(spam$type, p = 0.75, list = FALSE)
inTrain
summary(spam$type)
str(spam$type)
length(inTrain)
training <- spam[inTrain, ]
test <- spam[-inTrain, ]
library(caret)
library(kernlab)
data(spam)
# create a parition such that the first 75% is the train set
inTrain <- createDataPartition(spam$type, p = 0.75, list = FALSE)
training <- spam[inTrain, ]
testing <- spam[-inTrain, ]
dim(training)
l
modelFit <- train(type ~ ., data, model = "glm")
modelFit <- train(type ~ ., data = training, model = "glm")
modelFit
modelFit <- train(type ~ ., data = training, model = "glm")
modelFit <- train(type ~ ., data = training, method = "glm")
modelFit
plot(modelFit)
modelFit$finalModel
predictions <- predict(modelFit, newdata = testing)
predictions
confusionMatrix(predictions, testing$type)
sd(C(9, 2, 1))
sd(9, 2, 1)
?sd
a <- c(9, 2, 1)
sd(a)
mean(a)
(9-4)^2
(9-4)^2 + (9-2)^2 + (9-1)^2
(9-4)^2 + (2-4)^2 + (1-4)^2
sqrt((9-4)^2 + (2-4)^2 + (1-4)^2)
sqrt((9-4)^2 + (2-4)^2 + (1-4)^2)/3)
sqrt(((9-4)^2 + (2-4)^2 + (1-4)^2))/3)
(9-4)^2 + (2-4)^2 + (1-4)^2
38/3
sqrt(38/3)
sqrt(((9-4)^2 + (2-4)^2 + (1-4)^2)/5)
sqrt(((9-4)^2 + (2-4)^2 + (1-4)^2)/3)
sd(a)
a <- c(4, 2, 5, 8, 6)
mean(a)
sd(a)
sqrt(((4-5)^2 + (2-5)^2 + (5-5)^2 + (8-5)^2 + (9-5)^2)/5))
sqrt(((4-5)^2 + (2-5)^2 + (5-5)^2 + (8-5)^2 + (9-5)^2)/5)
sqrt(((4-5)^2 + (2-5)^2 + (5-5)^2 + (8-5)^2 + (9-5)^2)/5-1)
((4-5)^2 + (2-5)^2 + (5-5)^2 + (8-5)^2 + (9-5)^2)
((4-5)^2 + (2-5)^2 + (5-5)^2 + (8-5)^2 + (6-5)^2)
sqrt(((4-5)^2 + (2-5)^2 + (5-5)^2 + (8-5)^2 + (6-5)^2)/5-1)
20/4
sqrt(5)
((4-5)^2 + (2-5)^2 + (5-5)^2 + (8-5)^2 + (6-5)^2)/5-1
((4-5)^2 + (2-5)^2 + (5-5)^2 + (8-5)^2 + (6-5)^2)/(5-1)
a <- c(9, 2, 1)
m <- mean(a)
((9-a)^2 + (2-a)^2 + (1-a)^2)
((9-a)^2 + (2-a)^2 + (1-a)^2)
a
m
((9-m)^2 + (2-m)^2 + (1-m)^2)
sqrt(38/3)
38/3
sqrt(12.66667)
sd(a)
mean(a)
a
sd(a)
sqrt(38/(3-1)
)
?qt
qt(.975, 10)
n <- 9
s <- 30
mn + c(-1, 1) * qt(.95, n-1) * (s / sqrt(n))
n <- 9
mn <- 1100
s <- 30
mn + c(-1, 1) * qt(.95, n-1) * (s / sqrt(n))
?t.test?
?
?t.test
mn + c(-1, 1) * qt(.95, n-1) * s / sqrt(n)
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
qt(.975, n-1)
s / sqrt(n)
(2 - qt(0.975, 9-1))* sqrt(9)
qt(0.975, 8)
-0.3*sqrt(9)
sqrt(.9)
s <- 2 + 2.306/3
s
s <- -2 + 2.306/3
s
s <- -2*3/2.306
s
s <- 2*3/2.306
s
2 + c(1, -1) * qt(0.975, 19) * 0.64 * (1/sqrt(20))
3 = c(1, -1) * qt(0.975) * (.6/sqrt(10))
3 + c(1, -1) * qt(0.975) * (.6/sqrt(10))
3 + c(1, -1) * qt(0.975, 9) * (.6/sqrt(10))
2 + c(1, -1) * qt(0.975, 9) * (.6/sqrt(10))
-22 + c(1, -1) * qt(0.975, 9) * (.6/sqrt(10))
2 + c(1, -1) * qt(0.975, 9) * (.64/sqrt(10))
2 + c(1, -1) * qt(0.975, 19) * (.64/sqrt(20))
2 - 5 + c(1, -1) * qt(0.975, 19) * (.64/sqrt(20))
3 - 5 + c(-1, 1) * qt(.975, 18) * sp * (1 / 10 + 1 / 10)^.5
3 - 5 + c(-1, 1) * qt(.975, 18) * .64 * (1 / 10 + 1 / 10)^.5
qt(0.975, 19)
(1/10 + 1/10)^2
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n-1) * sp * (1/10 + 1/10)^2
n <- 20
mn_new <- 3; mn_old <- 5
s_new <- 0.6; s_old <- 0.68
sp <- s_new - s_old
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n-1) * sp * (1/10 + 1/10)^2
n <- 20
mn_new <- 3; mn_old <- 5
s_new <- 0.6; s_old <- 0.68
sp <- s_new - s_old
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n-1) * sp * (1/10 + 1/10)^2
mn_new - mn_old
qt(0.975, n-1)
sp
sp <- (s_new - s_old)/2
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n-1) * sp * (1/10 + 1/10)^2
sp
sp <- mean(s_new - s_old)
sp
s_new
s_old
sp
mean(0.6, 0.68)
sp <- (s_new - s_old) + s_old
sp
s_new
s_old
(s_new - s_old)
s_old
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n-1) * sp * sqrt(1/10 + 1/10)
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n-1) * sp * sqrt(1/10 + 1/10)
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n-2) * sp * sqrt(1/10 + 1/10)
sp
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n-1) * .64 * sqrt(1/10 + 1/10)
sp <- (s_old - s_new - ) + s_old
sp <- (s_old - s_new) + s_old
sp
sp <- (s_old - s_new)/2 + s_old
sp
(s_old - s_new)/2
sp <- (s_old - s_new)/2 + s_new
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n-1) * sp * sqrt(1/10 + 1/10)
sp
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/10 + 1/10)
sp <- 0.89
sp <- 0.8
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/10 + 1/10)
n <- 20
mn_new <- 3; mn_old <- 5
s_new <- 0.6; s_old <- 0.68
sp <- sqrt((9 * 0.6 + 9 * 0.68) / (10 + 10 - 2))
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/10 + 1/10)
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/10 + 1/10)
n <- 200
mn_new <- 4; mn_old <- 6
s_new <- 0.5; s_old <- 2
sp <- sqrt((9 * s_new + 9 * s_old) / (100 + 100 - 2))
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/100 + 1/100)
mn_old - mn_new) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/100 + 1/100)
(mn_old - mn_new) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/100 + 1/100)
s_x <- mn_old; s_y <- mn_new
n_x <- 100; n_y <- 100
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
df
s_x <- mn_new; s_y <- mn_old
n_y <- 100; n_x <- 100
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
df
?t.test
s_x <- 15.34; s_y <- 18.23
n_y <- 8; n_x <- 21
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
df
s_x <- 15.34; s_y <- 18.23
n_x <- 8; n_y <- 21
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
df
n <- 18
mn_new <- -3; mn_old <- 1
s_new <- 1.5; s_old <- 1.8
# calucate the df for unequal variances
s_x <- s_new; s_y <- s_old
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
df
sp <- sqrt((9 * s_new + 9 * s_old) / (100 + 100 - 2))
(mn_old - mn_new) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/100 + 1/100)
(mn_old - mn_new) + c(-1, 1) * qt(0.95, n - 2) * sp * sqrt(1/100 + 1/100)
n <- 18
mn_treated <- -3; mn_placebo <- 1
s_treated <- 1.5; s_placebo <- 1.8
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
sp <- sqrt((9 * s_new + 9 * s_old) / (100 + 100 - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, n - 2) * sp * sqrt(1/100 + 1/100)
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/100 + 1/100)
df
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/100 + 1/100)
n <- 18
mn_treated <- -3; mn_placebo <- 1
s_treated <- 1.5; s_placebo <- 1.8
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
sp <- sqrt((9 * s_new + 9 * s_old) / (9 + 9 - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/100 + 1/100)
sp <- sqrt((9 * s_new^2 + 9 * s_old^2) / (9 + 9 - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/100 + 1/100)
sp <- sqrt((9 * 0.6 + 9 * 0.68) / (10 + 10 - 2))
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/10 + 1/10)
n <- 20
mn_new <- 3; mn_old <- 5
s_new <- 0.6; s_old <- 0.68
sp <- sqrt((9 * 0.6^2 + 9 * 0.68^2) / (10 + 10 - 2))
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/10 + 1/10)
n <- 20
mn_new <- 3; mn_old <- 5
s_new <- 0.6; s_old <- 0.68
sp <- sqrt((9 * 0.6 + 9 * 0.68) / (10 + 10 - 2))
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/10 + 1/10)
sp <- sqrt((9 * s_new^2 + 9 * s_old^2) / (9 + 9 - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/100 + 1/100)
n <- 18
mn_treated <- -3; mn_placebo <- 1
s_treated <- 1.5; s_placebo <- 1.8
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
# calculate the pooled variance
sp <- sqrt((9 * s_new^2 + 9 * s_old^2) / (9 + 9 - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/100 + 1/100)
df
sp
n <- 18
mn_treated <- -3; mn_placebo <- 1
s_treated <- 1.5; s_placebo <- 1.8
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
# calculate the pooled variance
sp <- sqrt((9 * s_new^2 + 9 * s_old^2) / (9 + 9 - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/9 + 1/9)
n <- 18
mn_treated <- -3; mn_placebo <- 1
s_treated <- 1.5; s_placebo <- 1.8
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
# calculate the pooled variance
sp <- sqrt((9 * s_new^2 + 9 * s_old^2) / (9 + 9 - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/n/2 + 1/n/2)
n <- 18
mn_treated <- -3; mn_placebo <- 1
s_treated <- 1.5; s_placebo <- 1.8
n_x <- 9; n_y <- 9
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
# calculate the pooled variance
sp <- sqrt((n_x * s_new^2 + n_y * s_old^2) / (n_x + n_y - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/n_x + 1/n_y)
mn_treated <- 132.86; mn_placebo <- 127.44
s_treated <- 15.34; s_placebo <- 18.23
n_x <- 8; n_y <- 2.13
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
# calculate the pooled variance
sp <- sqrt((n_x * s_new^2 + n_y * s_old^2) / (n_x + n_y - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/n_x + 1/n_y)
df
mn_treated <- 132.86; mn_placebo <- 127.44
s_treated <- 15.34; s_placebo <- 18.23
n_x <- 8; n_y <- 2.13
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
# calculate the pooled variance
sp <- sqrt((n_x * s_new^2 + n_y * s_old^2) / (n_x + n_y - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.975, df) * sp * sqrt(1/n_x + 1/n_y)
mn_treated
mn_placebo
df
mn_treated <- 132.86; mn_placebo <- 127.44
s_treated <- 15.34; s_placebo <- 18.23
n_x <- 8; n_y <- 21
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
# calculate the pooled variance
sp <- sqrt((n_x * s_new^2 + n_y * s_old^2) / (n_x + n_y - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.975, df) * sp * sqrt(1/n_x + 1/n_y)
df
mn_treated <- 132.86; mn_placebo <- 127.44
s_treated <- 15.34; s_placebo <- 18.23
n_x <- 8; n_y <- 21
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
n_x <- 9; n_y <- 9
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
df
n_y
mn_treated <- 132.86; mn_placebo <- 127.44
s_treated <- 15.34; s_placebo <- 18.23
n_x <- 8; n_y <- 21
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
# calculate the pooled variance
sp <- sqrt((n_x * s_new^2 + n_y * s_old^2) / (n_x + n_y - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.975, df) * sp * sqrt(1/n_x + 1/n_y)
df
qt(0.975, df)
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.975, 27) * sp * sqrt(1/n_x + 1/n_y)
sp <- sqrt((n_x * s_new^2 + n_y * s_old^2) / (n_x + n_y - 2))
sp
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.975, 27) * sp * sqrt(1/n_x + 1/n_y)
n_x
sp <- sqrt(((n_x-1) * s_new^2 + (n_y-1) * s_old^2) / (n_x + n_y - 2))
sp
s_new
a
sp <- sqrt(((n_x-1) * s_treated^2 + (n_y-1) * s_placebo^2) / (n_x + n_y - 2))
sp
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.975, 27) * sp * sqrt(1/n_x + 1/n_y)
n <- 18
mn_treated <- -3; mn_placebo <- 1
s_treated <- 1.5; s_placebo <- 1.8
n_x <- 9; n_y <- 9
# calucate the df for unequal variances
s_x <- s_treated; s_y <- s_placebo
df_num <- ((s_x^2/n_x) + (s_y^2/n_y))^2
df_denom <- ((s_x^2/n_x)^2/(n_x-1) + (s_y^2/n_y)^2/(n_y-1))
df <- df_num/df_denom
# calculate the pooled variance
sp <- sqrt(((n_x-1) * s_treated^2 + (n_y-1) * s_placebo^2) / (n_x + n_y - 2))
(mn_treated - mn_placebo) + c(-1, 1) * qt(0.95, df) * sp * sqrt(1/n_x + 1/n_y)
n <- 9
mn <- -2
# s <- ?
# A diet pill is given to 9 subjects over six weeks.
# The average difference in weight (follow up - baseline) is -2 pounds.
# What would the standard deviation of the difference in weight have to be
# for the upper endpoint of the 95% T confidence interval to touch 0?
# TConfidenceinterval at .9725 and DF = n-1 = 8
# Tconf <- mn + c(-1, 1) * qt(alpha, n-1) * s / sqrt(n)
s <- 2*3/2.306
s
qt(0.975, 8)
n <- 200
n_new <- 100; n_old <- 100
mn_new <- 4; mn_old <- 6
s_new <- .5; s_old <- 2
sp <- sqrt((n_new * s_new  + x_old * s_old) / (n_new + n_old - 2))
n <- 200
n_new <- 100; n_old <- 100
mn_new <- 4; mn_old <- 6
s_new <- .5; s_old <- 2
sp <- sqrt((n_new * s_new  + n_old * s_old) / (n_new + n_old - 2))
sp
(mn_new - mn_old) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/10 + 1/10)
( mn_old - mn_new) + c(-1, 1) * qt(0.975, n - 2) * sp * sqrt(1/10 + 1/10)
pnorm(1.645, mean = 2, sd = 1)
2 * pnorm(1.645, mean = 2, sd = 1)
pnorm(1.645, mean = 2, sd = 1, lower.tail = false)
pnorm(1.645, mean = 2, sd = 1, lower.tail = FALSE)
