BC <- subset(NEI, fips == "24510")
# aggregate the emissions by source & year
source_ <- aggregate(BC$Emissions, list(BC$type, BC$year), FUN = sum)
# rename the columns
names(source_) <- c("Type", "Year", "Emissions")
p <- qplot(Year, Emissions, color = Type, data = source_, geom = "path") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
dev.copy(png, file = "plot3.png")
# close connection to png device
dev.off()
p
# subset only the Baltimore City data
BC <- subset(NEI, fips == "24510")
# aggregate the emissions by source & year
source_ <- aggregate(BC$Emissions, list(BC$type, BC$year), FUN = sum)
# rename the columns
names(source_) <- c("Type", "Year", "Emissions")
p <- qplot(Year, Emissions, color = Type, data = source_, geom = "path") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
dev.copy(png, file = "plot3.png")
# close connection to png device
dev.off()
# subset the source data based on "Coal" appearing in either sector or name columns
coal_filter <- subset(SCC, grepl("Coal", EI.Sector) | grepl("Coal", Short.Name))
# subset the emissions data based on coal source codes
coal_emissions <- subset(NEI, NEI$SCC %in% coal_filter$SCC)
# aggregate the emissions by year
coal <- aggregate(coal_emissions$Emissions, list(coal_emissions$year), FUN = sum)
# rename the columns
names(coal) <- c("Year", "Emissions")
p <- qplot(Year, Emissions, data = coal, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
dev.copy(png, file = "plot4.png")
# close connection to png device
dev.off()
# subset the source data based on "Coal" appearing in either sector or name columns
coal_filter <- subset(SCC, grepl("Coal", EI.Sector) | grepl("Coal", Short.Name))
# subset the emissions data based on coal source codes
coal_emissions <- subset(NEI, NEI$SCC %in% coal_filter$SCC)
# aggregate the emissions by year
coal <- aggregate(coal_emissions$Emissions, list(coal_emissions$year), FUN = sum)
# rename the columns
names(coal) <- c("Year", "Emissions")
p <- qplot(Year, Emissions, data = coal, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
dev.copy(png, file = "plot4.png")
# close connection to png device
dev.off()
coal_filter <- subset(SCC, grepl("Coal", EI.Sector) | grepl("Coal", Short.Name))
coal_emissions <- subset(NEI, NEI$SCC %in% coal_filter$SCC)
coal <- aggregate(coal_emissions$Emissions, list(coal_emissions$year), FUN = sum)
names(coal) <- c("Year", "Emissions")
p <- qplot(Year, Emissions, data = coal, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
p
dev.copy(png, file = "plot4.png")
# close connection to png device
dev.off()
# subset the source data based on "On-Road" appearing in sector column
motor_filter <- subset(SCC, grepl("On-Road", EI.Sector))
# subset the emissions data based on Balitmore & coal source codes
motor_filter2 <- subset(NEI, fips == "24510" & NEI$SCC %in% motor_filter$SCC)
# aggregate the emissions by year
motor <- aggregate(motor_filter2$Emissions, list(motor_filter2$year), FUN = sum)
# rename the columns
names(motor) <- c("Year", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
p
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
p
print(p)
# subset the source data based on "On-Road" appearing in sector column
motor_filter <- subset(SCC, grepl("On-Road", EI.Sector))
# subset the emissions data based on Balitmore & coal source codes
motor_filter2 <- subset(NEI, fips == "24510" & NEI$SCC %in% motor_filter$SCC)
# aggregate the emissions by year
motor <- aggregate(motor_filter2$Emissions, list(motor_filter2$year), FUN = sum)
# rename the columns
names(motor) <- c("Year", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# copy plot to png file
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
# subset the emissions data based on Balitmore or LA & vehicle codes
motor_filter <- subset(NEI, (fips == "24510" | fips == "06037") & type == "ON-ROAD")
# rename the values, for a more interpretable dataframe & graph
motor_filter <- transform(motor_filter, region = ifelse(fips == "24510", "Baltimore City",
"Los Angeles County"))
# sum the data by year-region (4x2)
motor <- ddply(motor_filter, .(year, region), function(x) sum(x$Emissions))
# rename the columns
names(motor) <- c("Year", "Region", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
# split the data
motor_BC <- subset(motor, Region == "Baltimore City")
motor_LA <- subset(motor, Region == "Los Angeles County")
BC_min <- min(motor_BC$Emissions); BC_max <- max(motor_BC$Emissions)
LA_min <- min(motor_LA$Emissions); LA_max <- max(motor_LA$Emissions)
p + geom_hline(aes(yintercept = BC_min), linetype = "dashed") +
geom_hline(aes(yintercept = BC_max ), linetype = "dashed") +
geom_hline(aes(yintercept = LA_min), linetype = "dashed") +
geom_hline(aes(yintercept = LA_max ), linetype = "dashed")
print(p)
# copy plot to png file
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
library(ddply)
library(plyr)
# subset the emissions data based on Balitmore or LA & vehicle codes
motor_filter <- subset(NEI, (fips == "24510" | fips == "06037") & type == "ON-ROAD")
# rename the values, for a more interpretable dataframe & graph
motor_filter <- transform(motor_filter, region = ifelse(fips == "24510", "Baltimore City",
"Los Angeles County"))
# sum the data by year-region (4x2)
motor <- ddply(motor_filter, .(year, region), function(x) sum(x$Emissions))
# rename the columns
names(motor) <- c("Year", "Region", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
# split the data
motor_BC <- subset(motor, Region == "Baltimore City")
motor_LA <- subset(motor, Region == "Los Angeles County")
BC_min <- min(motor_BC$Emissions); BC_max <- max(motor_BC$Emissions)
LA_min <- min(motor_LA$Emissions); LA_max <- max(motor_LA$Emissions)
p + geom_hline(aes(yintercept = BC_min), linetype = "dashed") +
geom_hline(aes(yintercept = BC_max ), linetype = "dashed") +
geom_hline(aes(yintercept = LA_min), linetype = "dashed") +
geom_hline(aes(yintercept = LA_max ), linetype = "dashed")
print(p)
# copy plot to png file
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
p + facet_grid(. ~ Region)
p + facet_grid(Region ~ .)
p + facet_grid(Region ~ ., scales = free)
p + facet_grid(Region ~ ., scales = "free)
p + facet_grid(. ~ Region, scales = "free")
?facet_wrap
p + facet_wrap(~ Region, scales = "free")
p + facet_wrap(~ Region)
p + facet_wrap(~ Region, scales = "free")
p + geom_hline(aes(yintercept = BC_min), linetype = "dashed") +
geom_hline(aes(yintercept = BC_max ), linetype = "dashed") +
geom_hline(aes(yintercept = LA_min), linetype = "dashed") +
geom_hline(aes(yintercept = LA_max ), linetype = "dashed") +
facet_wrap(~ Region, scales = "free")
print(p)
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
# split the data
motor_BC <- subset(motor, Region == "Baltimore City")
motor_LA <- subset(motor, Region == "Los Angeles County")
# get the max and min values
BC_min <- min(motor_BC$Emissions); BC_max <- max(motor_BC$Emissions)
LA_min <- min(motor_LA$Emissions); LA_max <- max(motor_LA$Emissions)
p <- p + geom_hline(aes(yintercept = BC_min), linetype = "dashed") +
geom_hline(aes(yintercept = BC_max ), linetype = "dashed") +
geom_hline(aes(yintercept = LA_min), linetype = "dashed") +
geom_hline(aes(yintercept = LA_max ), linetype = "dashed") +
facet_wrap(~ Region, scales = "free")
print(p)
names(motor) <- c("Year", "Region", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free")
print(p)
# copy plot to png file
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
# rename the columns
names(motor) <- c("Year", "Region", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free")
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
motor_filter <- subset(SCC, grepl("On-Road", EI.Sector))
# subset the emissions data based on Balitmore & coal source codes
motor_filter2 <- subset(NEI, fips == "24510" & NEI$SCC %in% motor_filter$SCC)
# aggregate the emissions by year
motor <- aggregate(motor_filter2$Emissions, list(motor_filter2$year), FUN = sum)
# rename the columns
names(motor) <- c("Year", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# copy plot to png file
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
# rename the values, for a more interpretable dataframe & graph
motor_filter <- transform(motor_filter, region = ifelse(fips == "24510", "Baltimore City",
"LA County"))
# sum the data by year-region (4x2)
motor <- ddply(motor_filter, .(year, region), function(x) sum(x$Emissions))
# rename the columns
names(motor) <- c("Year", "Region", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free")
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
# rename the values, for a more interpretable dataframe & graph
motor_filter <- transform(motor_filter, region = ifelse(fips == "24510", "Baltimore City",
"LA County"))
# sum the data by year-region (4x2)
motor <- ddply(motor_filter, .(year, region), function(x) sum(x$Emissions))
# rename the columns
names(motor) <- c("Year", "Region", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free")
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# subset the emissions data based on Balitmore or LA & vehicle codes
motor_filter <- subset(NEI, (fips == "24510" | fips == "06037") & type == "ON-ROAD")
# rename the values, for a more interpretable dataframe & graph
motor_filter <- transform(motor_filter, region = ifelse(fips == "24510", "Baltimore City",
"LA County"))
# sum the data by year-region (4x2)
motor <- ddply(motor_filter, .(year, region), function(x) sum(x$Emissions))
# rename the columns
names(motor) <- c("Year", "Region", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free")
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
# rename the columns & convert the years to characters
names(emissions_by_year) <- c("Year", "Emissions")
emissions_by_year$Year <- as.character(emissions_by_year$Year)
par(mar=c(5.1,4.1,4.1,2.1)
plot(emissions_by_year$Year, emissions_by_year$Emissions/10^6, type = "l",
main = expression("Total Emissions from PM"[2.5]*" in the US"),
xlab = "Year",
ylab = (expression("Total" ~ PM[2.5] ~ "Emissions (million tonnes)")))
print(p)
par(mar=c(5.1,4.1,4.1,2.1)
p <- plot(emissions_by_year$Year, emissions_by_year$Emissions/10^6, type = "l",
main = expression("Total Emissions from PM"[2.5]*" in the US"),
xlab = "Year",
ylab = (expression("Total" ~ PM[2.5] ~ "Emissions (million tonnes)")))
print(p)
p <- plot(emissions_by_year$Year, emissions_by_year$Emissions/10^6, type = "l",
main = expression("Total Emissions from PM"[2.5]*" in the US"),
xlab = "Year",
ylab = (expression("Total" ~ PM[2.5] ~ "Emissions (million tonnes)")))
print(p)
par(mar=c(5.1,5,4.1,2.1)
par(mar=c(5.1,5,4.1,2.1))
p <- plot(emissions_by_year$Year, emissions_by_year$Emissions/10^6, type = "l",
main = expression("Total Emissions from PM"[2.5]*" in the US"),
xlab = "Year",
ylab = (expression("Total" ~ PM[2.5] ~ "Emissions (million tonnes)")))
print(p)
# copy plot to png file
dev.copy(png, file = "plot1.png")
# close connection to png device
dev.off()
# adjust the margins
par(mar=c(5.1,5,4.1,2.1))
p <- plot(BC_by_year$Year, BC_by_year$Emissions, type = "l",
main = expression("Total Emissions from PM"[2.5]*" in Baltimore City"),
xlab = "Year",
ylab = (expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")))
print(p)
# copy plot to png file
dev.copy(png, file = "plot2.png")
# close connection to png device
dev.off()
# adjust the margins
par(mar=c(5.1,5,4.1,2.1))
p <- plot(BC_by_year$Year, BC_by_year$Emissions, type = "l",
main = expression("Total Emissions from PM"[2.5]*" in Baltimore City"),
xlab = "Year",
ylab = (expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))) +
theme(legend.position="none")
print(p)
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free") + theme(legend.position="none")
print(p)
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = coal, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in the US by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# copy plot to png file
dev.copy(png, file = "plot4.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = motor, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
motor_filter <- subset(SCC, grepl("On-Road", EI.Sector))
# subset the emissions data based on Balitmore & coal source codes
motor_filter2 <- subset(NEI, fips == "24510" & NEI$SCC %in% motor_filter$SCC)
# aggregate the emissions by year
motor <- aggregate(motor_filter2$Emissions, list(motor_filter2$year), FUN = sum)
# rename the columns
names(motor) <- c("Year", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
p <- qplot(Year, Emissions, data = motor, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" from vehicles in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# copy plot to png file
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
# rename the columns
names(motor) <- c("Year", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" from Vehicles in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# copy plot to png file
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = coal, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" from Coal in the US by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# copy plot to png file
dev.copy(png, file = "plot4.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = coal, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" from Coal in the US")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# copy plot to png file
dev.copy(png, file = "plot4.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = motor, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" from Vehicles in Baltimore City by Source")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
p <- qplot(Year, Emissions, data = motor, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" from Vehicles in Baltimore City")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# copy plot to png file
dev.copy(png, file = "plot5.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = coal, geom = "line") +
ggtitle(expression("Total Emissions from PM"[2.5]*" from Coal in the US")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)"))
print(p)
# copy plot to png file
dev.copy(png, file = "plot4.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" from vehicles in Baltimore City and LA County")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free") + theme(legend.position = "none")
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" from vehicles in Baltimore City and LA County")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free") + theme(legend.position = "none")
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
# subset the emissions data based on Balitmore or LA & vehicle codes
motor_filter <- subset(NEI, (fips == "24510" | fips == "06037") & type == "ON-ROAD")
# rename the values, for a more interpretable dataframe & graph
motor_filter <- transform(motor_filter, region = ifelse(fips == "24510", "Baltimore City",
"LA County"))
# sum the data by year-region (4x2)
motor <- ddply(motor_filter, .(year, region), function(x) sum(x$Emissions))
# rename the columns
names(motor) <- c("Year", "Region", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" from vehicles in Baltimore City and LA County")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free") + theme(legend.position = "none")
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
# subset the emissions data based on Balitmore or LA & vehicle codes
motor_filter <- subset(NEI, (fips == "24510" | fips == "06037") & type == "ON-ROAD")
# rename the values, for a more interpretable dataframe & graph
motor_filter <- transform(motor_filter, region = ifelse(fips == "24510", "Baltimore City",
"LA County"))
# sum the data by year-region (4x2)
motor <- ddply(motor_filter, .(year, region), function(x) sum(x$Emissions))
# rename the columns
names(motor) <- c("Year", "Region", "Emissions")
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" from Vehicles in Baltimore City and LA County")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free") + theme(legend.position = "none")
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
p <- qplot(Year, Emissions, data = motor, geom = "line", color = Region) +
ggtitle(expression("Total Emissions from PM"[2.5]*" from Vehicles in Baltimore City and LA")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tonnes)")) +
facet_wrap(~ Region, scales = "free") + theme(legend.position = "none")
print(p)
# copy plot to png file
dev.copy(png, file = "plot6.png")
# close connection to png device
dev.off()
gc()
gc()
